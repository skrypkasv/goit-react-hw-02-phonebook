{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactList/Contact/Contact.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onAddContact","resetInputs","onSubmit","this","className","s","label","type","placeholder","onChange","Component","Contact","list","onDelContact","map","id","onClick","ContactList","contacts","onClearContact","Filter","onUpdateFilter","App","filter","addContact","contact","uuidv4","checkForUniqueness","alert","prevState","newName","toLowerCase","includes","clearContact","contactId","updateFilter","getFilteredContacts","filteredContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"yRAIqBA,E,4MACnBC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,aAAe,SAAAC,GAAM,IAAD,EACMA,EAAEC,OAAlBJ,EADU,EACVA,KAAMK,EADI,EACJA,MACd,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAAAJ,GACbA,EAAEK,iBACF,EAAKC,MAAMC,aAAa,EAAKX,OAC7B,EAAKY,e,EAGPA,YAAc,WACZ,EAAKL,SAAS,CACZN,KAAM,GACNC,OAAQ,M,uDAKV,OACE,uBAAMW,SAAUC,KAAKN,aAArB,UACE,kCACE,sBAAMO,UAAWC,IAAEC,MAAnB,kBACA,uBACEC,KAAK,OACLC,YAAY,YACZb,MAAOQ,KAAKd,MAAMC,KAClBmB,SAAUN,KAAKX,aACfF,KAAK,YAIT,kCACE,sBAAMc,UAAWC,IAAEC,MAAnB,oBACA,uBACEC,KAAK,OACLC,YAAY,YACZb,MAAOQ,KAAKd,MAAME,OAClBkB,SAAUN,KAAKX,aACfF,KAAK,cAIT,wBAAQiB,KAAK,SAAb,gC,GAjDiCG,aCD1B,SAASC,EAAT,GAA0C,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,aACtC,OAAOD,EAAKE,KAAI,gBAAGC,EAAH,EAAGA,GAAIzB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACd,+BACGD,EADH,KACWC,EACT,wBACEgB,KAAK,SACLS,QAAS,kBAAMH,EAAaE,IAF9B,sBAFOA,MCDE,SAASE,EAAT,GAGX,IAFFC,EAEC,EAFDA,SACAC,EACC,EADDA,eAEA,OACE,8BACE,6BACE,cAACR,EAAD,CACEC,KAAMM,EACNL,aAAcM,QCVT,SAASC,EAAT,GAA4C,IAA1BzB,EAAyB,EAAzBA,MAAO0B,EAAkB,EAAlBA,eACtC,OACE,kCACE,yDACA,uBACEd,KAAK,OACLC,YAAY,eACZb,MAAOA,EACPc,SAAU,SAAAhB,GAAC,OAAI4B,EAAe5B,EAAEC,OAAOC,a,YC+FhC2B,E,4MAnGbjC,MAAQ,CACN6B,SAAU,CACR,CACEH,GAAI,OACJzB,KAAM,iBACNC,OAAQ,aAEV,CACEwB,GAAI,OACJzB,KAAM,aACNC,OAAQ,aAEV,CACEwB,GAAI,OACJzB,KAAM,gBACNC,OAAQ,aAEV,CACEwB,GAAI,OACJzB,KAAM,YACNC,OAAQ,cAGZgC,OAAQ,I,EAGVC,WAAa,SAAAnC,GAAU,IACbC,EAAiBD,EAAjBC,KAAMC,EAAWF,EAAXE,OACRkC,EAAU,CACdV,GAAIW,cACJpC,OACAC,UAEoB,EAAKoC,mBAAmBrC,GAG1CsC,MAAM,cAAD,OAAetC,EAAf,yBACL,EAAKM,UAAS,SAAAiC,GACZ,MAAO,CACLX,SAAS,GAAD,mBAAMW,EAAUX,UAAhB,CAA0BO,S,EAK5CE,mBAAqB,SAAAG,GAKnB,QAJqB,EAAKzC,MAAlB6B,SAELJ,KAAI,qBAAGxB,KAAgByC,iBACvBC,SAASF,EAAQC,gB,EAItBE,aAAe,SAAAC,GACb,EAAKtC,UAAS,SAAAiC,GACZ,MAAO,CACLX,SAAUW,EAAUX,SAASK,QAC3B,qBAAGR,KAAgBmB,U,EAM3BC,aAAe,SAAAZ,GACb,EAAK3B,SAAS,CAAE2B,Y,EAGlBa,oBAAsB,WAAO,IAAD,EACG,EAAK/C,MAA1B6B,EADkB,EAClBA,SAAUK,EADQ,EACRA,OAClB,OAAOL,EAASK,QAAO,SAAAE,GAAO,OAC5BA,EAAQnC,KACLyC,cACAC,SAAST,EAAOQ,mB,uDAIb,IACAR,EAAWpB,KAAKd,MAAhBkC,OACFc,EAAmBlC,KAAKiC,sBAE9B,OACE,sBAAKhC,UAAU,YAAf,UACE,2CAEA,cAAC,EAAD,CAAaJ,aAAcG,KAAKqB,aAChC,0CAEA,cAACJ,EAAD,CACEzB,MAAO4B,EACPF,eAAgBlB,KAAKgC,eAEvB,cAAClB,EAAD,CACEC,SAAUmB,EACVlB,eAAgBhB,KAAK8B,sB,GA7FbvB,aCQH4B,EAdS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MACnB,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACjCJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFhBQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,MAAQ,8B","file":"static/js/main.d2f401c5.chunk.js","sourcesContent":["import React, { Component } from 'react';\n// import PropTypes from 'prop-types'\nimport s from './ContactForm.module.css';\n\nexport default class ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onAddContact(this.state);\n    this.resetInputs();\n  };\n\n  resetInputs = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          <span className={s.label}>Name</span>\n          <input\n            type=\"text\"\n            placeholder=\"John Snow\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            name=\"name\"\n          ></input>\n        </label>\n\n        <label>\n          <span className={s.label}>Number</span>\n          <input\n            type=\"text\"\n            placeholder=\"000-00-00\"\n            value={this.state.number}\n            onChange={this.handleChange}\n            name=\"number\"\n          ></input>\n        </label>\n\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\n// import PropTypes from 'prop-types'\n\nexport default function Contact({ list, onDelContact }) {\n  return list.map(({ id, name, number }) => (\n    <li key={id}>\n      {name}: {number}\n      <button\n        type=\"button\"\n        onClick={() => onDelContact(id)}\n      >\n        Delete\n      </button>\n    </li>\n  ));\n}\n","import React from 'react';\nimport Contact from './Contact/Contact';\n// import PropTypes from 'prop-types'\n\nexport default function ContactList({\n  contacts,\n  onClearContact,\n}) {\n  return (\n    <div>\n      <ul>\n        <Contact\n          list={contacts}\n          onDelContact={onClearContact}\n        />\n      </ul>\n    </div>\n  );\n}\n","import React from 'react';\n// import PropTypes from 'prop-types'\n\nexport default function Filter({ value, onUpdateFilter }) {\n  return (\n    <label>\n      <span>Find contacts by name</span>\n      <input\n        type=\"text\"\n        placeholder=\"Find contact\"\n        value={value}\n        onChange={e => onUpdateFilter(e.target.value)}\n      ></input>\n    </label>\n  );\n}\n","import React, { Component } from 'react';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      {\n        id: 'id-1',\n        name: 'Dwayne Johnson',\n        number: '459-12-56',\n      },\n      {\n        id: 'id-2',\n        name: 'Mike Tyson',\n        number: '443-89-12',\n      },\n      {\n        id: 'id-3',\n        name: 'Homer Simpson',\n        number: '645-17-79',\n      },\n      {\n        id: 'id-4',\n        name: 'Bruce Lee',\n        number: '227-91-26',\n      },\n    ],\n    filter: '',\n  };\n\n  addContact = state => {\n    const { name, number } = state;\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    const isItDuplicate = this.checkForUniqueness(name);\n\n    isItDuplicate\n      ? alert(`contact of ${name} is already exist!!!`)\n      : this.setState(prevState => {\n          return {\n            contacts: [...prevState.contacts, contact],\n          };\n        });\n  };\n\n  checkForUniqueness = newName => {\n    const { contacts } = this.state;\n    const check = contacts\n      .map(({ name }) => name.toLowerCase())\n      .includes(newName.toLowerCase());\n    return check ? true : false;\n  };\n\n  clearContact = contactId => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(\n          ({ id }) => id !== contactId,\n        ),\n      };\n    });\n  };\n\n  updateFilter = filter => {\n    this.setState({ filter });\n  };\n\n  getFilteredContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name\n        .toLowerCase()\n        .includes(filter.toLowerCase()),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filteredContacts = this.getFilteredContacts();\n\n    return (\n      <div className=\"container\">\n        <h2>Phonebook</h2>\n\n        <ContactForm onAddContact={this.addContact} />\n        <h2>Contacts</h2>\n\n        <Filter\n          value={filter}\n          onUpdateFilter={this.updateFilter}\n        />\n        <ContactList\n          contacts={filteredContacts}\n          onClearContact={this.clearContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(\n      ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n        getCLS(onPerfEntry);\n        getFID(onPerfEntry);\n        getFCP(onPerfEntry);\n        getLCP(onPerfEntry);\n        getTTFB(onPerfEntry);\n      },\n    );\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__jvjPB\"};"],"sourceRoot":""}